# Azure Pipelines Extensions 1ES Build Pipeline
# This pipeline builds, signs, and publishes Azure DevOps extensions using 1ES standards

name: Running for ${{ parameters.extensionName }}
appendCommitMessageToRunName: false
trigger: none

parameters:
- name: extensionName
  displayName: 'Extension to Build'
  type: string
  default: 'Ansible'
  values:
  - Ansible
  - IIS Web App Deployment
- name: isDevBuild
  displayName: 'Development Build (Skip signing/publishing)'
  type: boolean
  default: false
- name: extensionVersion
  displayName: 'Extension Version Override (leave empty for auto-increment)'
  type: string
  default: ''
- name: publishExtension
  displayName: 'Publish Extension to Marketplace'
  type: boolean
  default: false

variables:
# 1ES Security Scanning
- name: CodeQL.Enabled
  value: true
# Extension registry settings
- name: PublisherId
  value: 'ms-vscs-rm'
# Signing variables from secure group
- group: EPS.ESRPSigningProdAME
# Dynamic variables
- name: ExtensionName
  value: ${{ parameters.extensionName }}
- name: IsDevBuild
  value: ${{ parameters.isDevBuild }}

resources:
  repositories:
  # 1ES Pipeline Templates
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
  # The main extensions repository
  - repository: AzurePipelinesExtensions
    type: github
    name: microsoft/azure-pipelines-extensions
    endpoint: github.com_vhorbachov
    ref: refs/heads/main
    trigger:
      branches:
        include:
        - master
      tags:
        include:
        - 'v*'

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    # SDL Configuration
    sdl:
      sourceAnalysisPool:
        name: 1ESPtTfsAgentBuildPoolSDL
      sourceRepositoriesToScan:
        include:
        - repository: AzurePipelinesExtensions
      spotBugs:
        enabled: false # Not applicable for TypeScript/JavaScript
      credscan:
        enabled: true
      binskim:
        enabled: true
      eslint:
        enabled: true
    
    # Build Pool
    pool:
      name: 1ESPtTfsAgentBuildPool1
      
    # Custom Build Tags
    customBuildTags:
    - ES365AIMigrationTooling
    - 1ES-AzureExtensions
    - ${{ if eq(parameters.isDevBuild, true) }}:
      - DevBuild
    - ${{ if eq(parameters.isDevBuild, false) }}:
      - ProductionBuild
    - ${{ if eq(parameters.publishExtension, true) }}:
      - PublishEnabled
    - Extension-${{ parameters.extensionName }}

    stages:
    - ${{ if eq(parameters.extensionName, 'Retrospectives') }}:
      - template: Sign-Retro.yml
        parameters:
          PublishExtension: ${{ parameters.PublishExtension }}
          ExtensionVersion: ${{ trim(parameters.ExtensionVersion) }}

    - ${{ if eq(parameters.extensionName, 'estimate') }}:
      - template: Sign-Template.yml
        parameters:
          ExtensionName: ${{ parameters.extensionName }}
          PublishExtension: ${{ parameters.PublishExtension }}
          ExtensionVersion: ${{ trim(parameters.ExtensionVersion) }}
          MarketplaceConnectedServiceName: 'PublishSignedExtensions'
          PublisherId: "ms-devlabs"
          PublicExtensionName: ${{ parameters.extensionName }}
          RepositoryName: "microsoft/azure-pipelines-extensions"
          updateTaskVersion: true
          usePython3: true # This extension uses Python 3 for its build process.
          specificNodeVersion: '10.x'

    # # Pipeline Stages
    # stages:
    # # Build Stage
    # - stage: Build
    #   displayName: 'Build Extension'
    #   jobs:
    #   - job: BuildExtensions
    #     displayName: 'Build ${{ parameters.extensionName }}'
    #     templateContext:
    #       outputs:
    #       - output: pipelineArtifact
    #         displayName: 'Publish Build Artifacts'
    #         targetPath: '$(Build.ArtifactStagingDirectory)/build'
    #         artifactName: 'build-$(ExtensionName)'
    #     steps:
    #     - checkout: AzurePipelinesExtensions
    #     - template: .pipelines/1es-migration/templates/build-extension.yml@AzurePipelinesExtensions
    #       parameters:
    #         extensionName: $(ExtensionName)

    # # Sign and Package Stage
    # - stage: SignPackage
    #   displayName: 'Sign and Package'
    #   dependsOn: Build
    #   condition: and(succeeded(), eq(variables['IsDevBuild'], 'false'))
    #   jobs:
    #   - job: SignExtensions
    #     displayName: 'Sign ${{ parameters.extensionName }}'
    #     templateContext:
    #       outputs:
    #       - output: pipelineArtifact
    #         displayName: 'Publish Signed Extensions'
    #         targetPath: '$(Build.ArtifactStagingDirectory)/signed'
    #         artifactName: 'signed-$(ExtensionName)'
    #     steps:
    #     - checkout: AzurePipelinesExtensions
    #     - download: current
    #       artifact: 'build-$(ExtensionName)'
    #     - template: .pipelines/1es-migration/templates/sign-extension.yml@AzurePipelinesExtensions
    #       parameters:
    #         extensionName: $(ExtensionName)
            
    # # Publish Stage
    # - stage: Publish
    #   displayName: 'Publish to Marketplace'
    #   dependsOn: SignPackage
    #   condition: |
    #     and(
    #       succeeded(),
    #       eq(variables['IsDevBuild'], 'false'),
    #       eq(variables['Build.SourceBranch'], 'refs/heads/main'),
    #       eq('${{ parameters.publishExtension }}', 'true')
    #     )
    #   jobs:
    #   - deployment: PublishExtensions
    #     displayName: 'Publish ${{ parameters.extensionName }} to Marketplace'
    #     environment: 'AzureDevOpsMarketplace-Production'
    #     strategy:
    #       runOnce:
    #         deploy:
    #           steps:
    #           - checkout: AzurePipelinesExtensions
    #           - download: current
    #             artifact: 'signed-$(ExtensionName)'
    #           - template: .pipelines/1es-migration/templates/publish-extension.yml@AzurePipelinesExtensions
    #             parameters:
    #               extensionName: $(ExtensionName)
                  
    # # Validation Stage
    # - stage: Validate
    #   displayName: 'Post-Deployment Validation'
    #   dependsOn: Publish
    #   condition: succeeded()
    #   jobs:
    #   - job: ValidateDeployment
    #     displayName: 'Validate ${{ parameters.extensionName }} Deployment'
    #     steps:
    #     - checkout: AzurePipelinesExtensions
    #     - template: .pipelines/1es-migration/templates/validate-deployment.yml@AzurePipelinesExtensions
    #       parameters:
    #         extensionName: $(ExtensionName)