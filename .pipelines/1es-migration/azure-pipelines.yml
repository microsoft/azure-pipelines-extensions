# Azure Pipelines Extensions 1ES Build Pipeline
# This pipeline builds, signs, and publishes Azure DevOps extensions using 1ES standards

name: Extension $(ExtensionName) - $(Date:yyyyMMdd)$(Rev:.r)
appendCommitMessageToRunName: false
trigger: none

parameters:
- name: extensionName
  displayName: 'Extension to Build'
  type: string
  default: 'Ansible'
  values:
  - Ansible
  - IIS Web App Deployment
  - Terraform
- name: isDevBuild
  displayName: 'Development Build (Skip signing/publishing)'
  type: boolean
  default: false
- name: extensionVersion
  displayName: 'Extension Version Override (leave empty for auto-increment)'
  type: string
  default: ''
- name: publishExtension
  displayName: 'Publish Extension to Marketplace'
  type: boolean
  default: false

variables:
# 1ES Security Scanning
- name: CodeQL.Enabled
  value: true
# Extension registry settings
- name: PublisherId
  value: 'ms-vscs-rm'
# Signing variables from secure group
# - group: EPS.ESRPSigningProdAME
# Dynamic variables
- name: ExtensionName
  value: ${{ parameters.extensionName }}
- name: IsDevBuild
  value: ${{ parameters.isDevBuild }}

resources:
  repositories:
  # 1ES Pipeline Templates
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    # SDL Configuration
    sdl:
      sourceAnalysisPool:
        name: 1ESPtTfsAgentBuildPoolSDL
      spotBugs:
        enabled: false # Not applicable for TypeScript/JavaScript
      credscan:
        enabled: true
      binskim:
        enabled: true
      eslint:
        enabled: true

    # Build Pool
    pool:
      name: 1ESPtTfsAgentBuildPool1

    # Custom Build Tags
    customBuildTags:
    - ES365AIMigrationTooling
    - 1ES-AzureExtensions
    - ${{ if eq(parameters.isDevBuild, true) }}:
      - DevBuild
    - ${{ if eq(parameters.isDevBuild, false) }}:
      - ProductionBuild
    - ${{ if eq(parameters.publishExtension, true) }}:
      - PublishEnabled
    - Extension-${{ parameters.extensionName }}

    stages:
    # Build Stage
    - stage: Build
      displayName: 'Build ${{ parameters.extensionName }}'
      jobs:
      - job: BuildExtension
        displayName: 'Build Extension'
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Build Output'
            targetPath: '$(Build.ArtifactStagingDirectory)/build'
            artifactName: 'build-$(ExtensionName)'
        steps:
        - checkout: self
          displayName: 'Checkout Extensions Repository'
        - template: templates/build.yml
          parameters:
            extensionName: ${{ parameters.extensionName }}