{
  "manifestVersion": 1.0,
  "id": "vss-services-externaltfs",
  "version": "15.188.0",
  "name": "TFS artifacts for Release Management",
  "publisher": "ms-vscs-rm",
  "description": "Deploy external TFS/ Azure DevOps artifacts using Release Management",
  "_description.comment": "The below format to define artifact extensions is currently in preview and may change in future.",
  "public": true,
  "categories": [ "Build and release" ],
  "tags": [ "Artifacts", "DevOps", "Release" ],
  "targets": [
    {
      "id": "Microsoft.VisualStudio.Services"
    }
  ],
  "demands": [ "contribution/ms.vss-endpoint.externaltfs-endpoint-type" ],
  "icons": {
    "default": "vss_default.png"
  },
  "screenshots": [
    {
      "path": "images/screen1.png"
    },
    {
      "path": "images/screen2.png"
    },
    {
      "path": "images/screen3.png"
    }
  ],
  "content": { 
      "details": { 
        "path": "readme.md" 
      },
      "license": {
        "path": "mp_terms.md"
      }
    },
  "files": [
    {
       "path": "images/screen1.png",
       "addressable": true
    },
    {
       "path": "images/screen2.png",
       "addressable": true
    },
    {
       "path": "images/screen3.png",
       "addressable": true
    },
    {
       "path": "Tasks/DownloadArtifactsTfsVersionControl"
    },
    {
       "path": "Tasks/DownloadArtifactsTfsGit"
    },
    {
       "path": "Tasks/DownloadExternalBuildArtifacts"
    }
  ],
  "repository": {
        "type": "git",
        "uri": "https://github.com/Microsoft/azure-pipelines-extensions/"
  },
  "branding": {
      "color": "#5C2D91",
      "theme": "dark"
  },  
  "contributions": [
    {
      "id": "externalTFSBuild-release-artifact-type",
      "description": "External TFS Build Artifact",
      "_description.comment": "Don't Localize the word 'TFS'",
      "type": "ms.vss-releaseartifact.release-artifact-type",
      "targets": [ "ms.vss-releaseartifact.artifact-types" ],
      "properties": {
        "name": "ExternalTfsBuild",
        "displayName": "External TFS Build",
        "_displayName.comment": "Don't Localize the word 'TFS'",
        "endpointTypeId": "ExternalTFS",
        "uniqueSourceIdentifier": "{{connection}}:{{project}}:{{definition}}",
        "downloadTaskId": "B099689B-039E-4450-8658-C72E3895DD3F",
        "artifactType": "Build",
        "inputDescriptors": [
          {
            "id": "connection",
            "name": "Service Endpoint",
            "description": "Service Endpoint Id",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            }
          },
          {
            "id": "project",
            "name": "Project",
            "description": "Project Id",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection"
            ],
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            }
          },
          {
            "id": "definition",
            "name": "Build Definition",
            "description": "Build Definition Id",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection",
              "project"
            ],
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            },
            "properties": {
              "isSearchable": true
            }
          },
          {
            "id": "defaultVersionType",
            "name": "Default version",
            "description": "The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": false,
            "values": {
              "inputId": "defaultVersionTypeValues",
              "defaultValue": "latestType",
              "possibleValues": [
                {
                  "value": "latestType",
                  "displayValue": "Latest"
                },
                {
                  "value": "selectDuringReleaseCreationType",
                  "displayValue": "Specify at the time of release creation"
                }
              ],
              "isLimitedToPossibleValues": true
            },
            "validation": {
              "isRequired": true,
              "dataType": "string"
            }
          },
          {
            "id": "artifacts",
            "name": "Artifacts",
            "description": "Build artifacts",
            "inputMode": "none",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection",
              "project",
              "definition"
            ],
            "validation": {
              "isRequired": false,
              "dataType": "string",
              "maxLength": 300
            }
          }
        ],
        "dataSourceBindings": [
          {
            "target": "project",
            "dataSourceName": "Projects",
            "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{name}}}\" }"
          },
          {
            "target": "definition",
            "endpointUrl": "{{endpoint.url}}/{{project}}/_apis/build/definitions?api-version=3.0-preview&name=*{{name}}*&$top=500&continuationToken={{{continuationToken}}}&queryOrder=2",
            "resultSelector": "jsonpath:$.value[?(@.quality=='definition')]",
            "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{name}}}\" }",
            "callbackContextTemplate": "{\"continuationToken\" : \"{{{headers.x-ms-continuationtoken}}}\"}",
            "callbackRequiredTemplate": "{{{#headers.x-ms-continuationtoken}}}true{{{/headers.x-ms-continuationtoken}}}",
            "initialContextTemplate": "{\"continuationToken\" : \"{{{system.utcNow}}}\"}"
          },
          {
            "target": "versions",
            "dataSourceName": "Builds",
            "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{buildNumber}}}\" }"
          },
          {
            "target": "latestVersion",
            "dataSourceName": "LatestBuild",
            "resultTemplate": "{ Value : \"{{id}}\", DisplayValue : \"{{{buildNumber}}}\" }"
          },
          {
            "target": "artifactDetails",
            "dataSourceName": "Artifacts",
            "resultTemplate": "{ Name: \"{{name}}\", StreamType: \"{{resource.type}}\", downloadUrl : \"{{{resource.downloadUrl}}}\" }"
          },
          {
            "target": "artifacts",
            "dataSourceName": "Artifacts",
            "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\", data: { artifactType: \"{{resource.type}}\", containerId:\"{{ #regex /([0-9]+)/ resource.data }}\" } }"
          },
          {
            "target": "artifactItems",
            "dataSourceName": "ArtifactItems",
            "resultTemplate": "{ Value : \"{{{path}}}\", DisplayValue : \"{{{path}}}\", data: { itemType: \"{{{itemType}}}\", containerId:\"{{containerId}}\" } }"
          },
          {
            "target": "branchName",
            "dataSourceName": "BranchName"
          }
        ],
        "browsableArtifactTypeMapping": {
          "container": "artifactItems"
        },
        "artifactTypeStreamMapping": {
          "container": "zip",
          "filepath":  "fileshare"
        }
      }
    },
    {
      "id": "externalTFSBuild-task",
      "type": "ms.vss-distributed-task.task",
      "targets": [
        "ms.vss-distributed-task.tasks"
      ],
      "properties": {
        "name": "Tasks/DownloadExternalBuildArtifacts"
        }
    }, 
    {
        "id": "externalTFVC-release-artifact-type",
        "description": "External TFS Version Control",
        "_description.comment": "Don't Localize the word 'TFS Version Control'",
        "type": "ms.vss-releaseartifact.release-artifact-type",
        "targets": [ "ms.vss-releaseartifact.artifact-types" ],
        "properties": {
            "name": "ExternalTfvc",
            "displayName": "External TFS Version Control",
            "_displayName.comment": "Don't Localize the word 'TFS Version Control'",
            "endpointTypeId": "ExternalTFS",
            "uniqueSourceIdentifier": "{{{connection}}}:{{{project}}}:{{{definition}}}",
            "downloadTaskId": "f77a5e28-640e-4250-aa3a-174fa697a658",
            "artifactType": "SourceControl",
            "inputDescriptors": [
                {
                    "id": "connection",
                    "name": "Service Endpoint",
                    "description": "Service Endpoint Id",
                    "inputMode": "Combo",
                    "isConfidential": false,
                    "hasDynamicValueInformation": true,
                    "validation": {
                        "isRequired": true,
                        "dataType": "string",
                        "maxLength": 300
                    }
                },
                {
                    "id": "project",
                    "name": "Project",
                    "description": "Projects",
                    "inputMode": "Combo",
                    "isConfidential": false,
                    "hasDynamicValueInformation": true,
                    "dependencyInputIds": [
                        "connection"
                    ],
                    "validation": {
                        "isRequired": true,
                        "dataType": "string",
                        "maxLength": 300
                    }
                },
                {
                    "id": "definition",
                    "name": "Source (repository)",
                    "description": "Repository to pull",
                    "inputMode": "Combo",
                    "isConfidential": false,
                    "hasDynamicValueInformation": true,
                    "dependencyInputIds": [
                        "connection",
                        "project"
                    ],
                    "validation": {
                        "isRequired": true,
                        "dataType": "string",
                        "maxLength": 300
                    }
                },
                {
                  "id": "defaultVersionType",
                  "name": "Default version",
                  "description": "The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
                  "inputMode": "Combo",
                  "isConfidential": false,
                  "hasDynamicValueInformation": false,
                  "values": {
                    "inputId": "defaultVersionTypeValues",
                    "defaultValue": "latestType",
                    "possibleValues": [
                      {
                        "value": "latestType",
                        "displayValue": "Latest"
                      },
                      {
                        "value": "selectDuringReleaseCreationType",
                        "displayValue": "Specify at the time of release creation"
                      }
                    ],
                    "isLimitedToPossibleValues": true
                  },
                  "validation": {
                    "isRequired": true,
                    "dataType": "string"
                  }
                },
                {
                    "id": "artifacts",
                    "name": "Artifacts",
                    "description": "Source Artifacts",
                    "inputMode": "none",
                    "isConfidential": false,
                    "hasDynamicValueInformation": true,
                    "dependencyInputIds": [
                        "connection",
                        "project",
                        "definition"
                    ],
                    "validation": {
                        "isRequired": false,
                        "dataType": "string",
                        "maxLength": 300
                    }
                }
            ],
            "dataSourceBindings": [
                {
                    "target": "project",
                    "dataSourceName": "Projects",
                    "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{name}}}\" }"
                },
                {
                    "target": "definition",
                    "dataSourceName": "TfvcProjects",
                    "resultTemplate": "{ Value : \"{{#if supportsTFVC}}{{{project.id}}}{{else}}{{/if}}\", DisplayValue : \"{{#if supportsTFVC}}$/{{{project.name}}}{{else}}{{/if}}\" }"
                },
                {
                    "target": "versions",
                    "dataSourceName": "TfvcChangesets",
                    "resultTemplate": "{ Value : \"{{{changesetId}}}\", DisplayValue : \"Changeset {{{changesetId}}}\" }"
                },
                {
                    "target": "latestVersion",
                    "dataSourceName": "TfvcLatestChangeset",
                    "resultTemplate": "{ Value : \"{{{changesetId}}}\", DisplayValue : \"Changeset {{{changesetId}}}\" }"
                },
                {
                    "target": "artifacts",
                    "dataSourceName": "TfvcArtifacts",
                    "resultTemplate": "{ Value : \"{{{ #regex ([^/]*$) path}}}\", DisplayValue : \"{{{ #regex ([^/]*$) path}}}\", data: { artifactType: \"source\" } }"
                },
                {
                    "target": "artifactItems",
                    "dataSourceName": "TfvcArtifactItems",
                    "resultTemplate": "{ Value : \"{{{ #stringReplace sourceName '' path}}}\", DisplayValue : \"{{{ #stringReplace sourceName '' path}}}\", data: { itemType: \"{{#if isFolder}}folder{{else}}file{{/if}}\" } }"
                }
            ],
            "browsableArtifactTypeMapping": {
                "source": "artifactItems"
            }
        }
    },      
    {
      "id": "externalTfvc-task",
      "type": "ms.vss-distributed-task.task",
      "targets": [
        "ms.vss-distributed-task.tasks"
      ],
      "properties": {
        "name": "Tasks/DownloadArtifactsTfsVersionControl"
        }
    },      
    {
      "id": "externalTfGit-release-artifact-type",
      "description": "External TFS Git",
      "_description.comment": "Don't Localize the word 'TFS Git'",
      "type": "ms.vss-releaseartifact.release-artifact-type",
      "targets": [ "ms.vss-releaseartifact.artifact-types" ],
      "properties": {
        "name": "ExternalTfsGit",
        "displayName": "External TFS Git",
        "_displayName.comment": "Don't Localize the word 'TFS Git'",
        "endpointTypeId": "ExternalTFS",
        "uniqueSourceIdentifier": "{{connection}}:{{project}}:{{definition}}",
        "downloadTaskId": "bf7b17db-eb58-4014-ab2b-e4bf9d3b28f1",
        "artifactType": "SourceControl",
        "inputDescriptors": [
            {
                "id": "connection",
                "name": "Service Endpoint",
                "description": "Service Endpoint Id",
                "inputMode": "Combo",
                "isConfidential": false,
                "hasDynamicValueInformation": true,
                "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                }
            },
            {
                "id": "project",
                "name": "Project",
                "description": "Projects",
                "inputMode": "Combo",
                "isConfidential": false,
                "hasDynamicValueInformation": true,
                "dependencyInputIds": [
                    "connection"
                ],
                "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                }
            },
            {
                "id": "definition",
                "name": "Source (repository)",
                "description": "Repository to pull",
                "inputMode": "Combo",
                "isConfidential": false,
                "hasDynamicValueInformation": true,
                "dependencyInputIds": [
                    "connection",
                    "project"
                ],
                "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                }
            },
            {
                "id": "branch",
                "name": "Branch",
                "description": "Branch to checkout",
                "inputMode": "Combo",
                "isConfidential": false,
                "hasDynamicValueInformation": true,
                "dependencyInputIds": [
                    "connection",
                    "project",
                    "definition"
                ],
                "validation": {
                    "isRequired": true,
                    "dataType": "string",
                    "maxLength": 300
                }
            },
            {
              "id": "defaultVersionType",
              "name": "Default version",
              "description": "The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
              "inputMode": "Combo",
              "isConfidential": false,
              "hasDynamicValueInformation": false,
              "values": {
                "inputId": "defaultVersionTypeValues",
                "defaultValue": "latestFromBranchType",
                "possibleValues": [
                  {
                    "value": "latestFromBranchType",
                    "displayValue": "Latest from the default branch"
                  },
                  {
                    "value": "selectDuringReleaseCreationType",
                    "displayValue": "Specify at the time of release creation"
                  }
                ],
                "isLimitedToPossibleValues": true
              },
              "validation": {
                "isRequired": true,
                "dataType": "string"
              }
            },
            {
                "id": "artifacts",
                "name": "Artifacts",
                "description": "Source Artifacts",
                "inputMode": "none",
                "isConfidential": false,
                "hasDynamicValueInformation": true,
                "dependencyInputIds": [
                    "connection",
                    "project",
                    "definition",
                    "branch"
                ],
                "validation": {
                    "isRequired": false,
                    "dataType": "string",
                    "maxLength": 300
                }
            }
        ],
        "dataSourceBindings": [
          {
            "target": "project",
            "dataSourceName": "Projects",
            "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{name}}}\" }"
          },
          {
            "target": "definition",
            "dataSourceName": "Repositories",
            "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{name}}}\" }"
          },
          {
            "target": "branch",
            "dataSourceName": "Branches",
            "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
          },
          {
            "target": "versions",
            "dataSourceName": "GitCommits",
            "resultTemplate": "{ Value : \"{{{commitId}}}\", DisplayValue : \"{{{ #subString 0 8 commitId }}}\" }"
          },
          {
            "target": "latestVersion",
            "dataSourceName": "GitLatestCommit",
            "resultTemplate": "{ Value : \"{{{commitId}}}\", DisplayValue : \"{{{ #subString 0 8 commitId }}}\" }"
          },
          {
            "target": "artifacts",
            "dataSourceName": "GitArtifacts",
            "resultTemplate": "{ Value : \"{{{ #regex ([^/]*$) path}}}\", DisplayValue : \"{{{ #regex ([^/]*$) path}}}\", data: { itemType: \"{{#if isFolder}}Folder{{else}}File{{/if}}\", artifactType: \"source\" } }"
          },
          {
            "target": "artifactItems",
            "dataSourceName": "GitArtifactItems",
            "resultTemplate": "{ Value : \"{{{ #stringReplace sourceName '' path}}}\", DisplayValue : \"{{{ #stringReplace sourceName '' path}}}\", data: { itemType: \"{{#if isFolder}}Folder{{else}}File{{/if}}\" } }"
          }
        ],
        "browsableArtifactTypeMapping": {
          "source": "artifactItems"
        }
      }
    },
    {
      "id": "externalTfGit-task",
      "type": "ms.vss-distributed-task.task",
      "targets": [
        "ms.vss-distributed-task.tasks"
      ],
      "properties": {
        "name": "Tasks/DownloadArtifactsTfsGit"
      }
    },    
    {
      "id": "externalTFSXamlBuild-release-artifact-type",
      "description": "External TFS XAML Build Artifact",
      "_description.comment": "Don't Localize the words 'TFS' and 'XAML'",
      "type": "ms.vss-releaseartifact.release-artifact-type",
      "targets": [ "ms.vss-releaseartifact.artifact-types" ],
      "properties": {
        "name": "ExternalTfsXamlBuild",
        "displayName": "External TFS XAML Build",
        "_displayName.comment": "Don't Localize the words 'TFS' and 'XAML'",
        "endpointTypeId": "ExternalTFS",
        "uniqueSourceIdentifier": "{{connection}}:{{project}}:{{definition}}",
        "artifactType": "Build",
        "inputDescriptors": [
          {
            "id": "connection",
            "name": "Service Endpoint",
            "description": "Service Endpoint Id",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            }
          },
          {
            "id": "project",
            "name": "Project",
            "description": "Project Id",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection"
            ],
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            }
          },
          {
            "id": "definition",
            "name": "XAML Build Definition",
            "description": "XAML Build Definition Id",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection",
              "project"
            ],
            "validation": {
              "isRequired": true,
              "dataType": "string",
              "maxLength": 300
            }
          },
          {
            "id": "defaultVersionType",
            "name": "Default version",
            "description": "The default version will be deployed when new releases are created. The version can be changed for manually created releases at the time of release creation",
            "inputMode": "Combo",
            "isConfidential": false,
            "hasDynamicValueInformation": false,
            "values": {
              "inputId": "defaultVersionTypeValues",
              "defaultValue": "latestType",
              "possibleValues": [
                {
                  "value": "latestType",
                  "displayValue": "Latest"
                },
                {
                  "value": "selectDuringReleaseCreationType",
                  "displayValue": "Specify at the time of release creation"
                }
              ],
              "isLimitedToPossibleValues": true
            },
            "validation": {
              "isRequired": true,
              "dataType": "string"
            }
          },
          {
            "id": "artifacts",
            "name": "Artifacts",
            "description": "Build artifacts",
            "inputMode": "none",
            "isConfidential": false,
            "hasDynamicValueInformation": true,
            "dependencyInputIds": [
              "connection",
              "project",
              "definition"
            ],
            "validation": {
              "isRequired": false,
              "dataType": "string",
              "maxLength": 300
            }
          }
        ],
        "dataSourceBindings": [
          {
            "target": "project",
            "dataSourceName": "XamlProjects",
            "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
          },
          {
            "target": "definition",
            "dataSourceName": "XamlDefinitions",
            "resultTemplate": "{ Value : \"{{{name}}}\", DisplayValue : \"{{{name}}}\" }"
          },
          {
            "target": "versions",
            "dataSourceName": "XamlBuilds",
            "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{buildNumber}}}\" }"
          },
          {
            "target": "latestVersion",
            "dataSourceName": "LatestXamlBuild",
            "resultTemplate": "{ Value : \"{{{id}}}\", DisplayValue : \"{{{buildNumber}}}\" }"
          },
          {
            "target": "artifactDetails",
            "dataSourceName": "XamlBuild",
            "resultTemplate": "{ Name: \"drop\", StreamType: \"{{ #regex ^(..) dropLocation }}\", downloadUrl: \"{{endpoint.url}}/{{project}}/_api/_build/ItemContent?buildUri={{uri}}&path=/drop\", fileShareLocation : \"{{ #jsonEscape dropLocation }}\" }"
          },
          {
            "target": "artifacts",
            "dataSourceName": "XamlBuild",
            "resultTemplate": "{ Value : \"drop\", DisplayValue : \"drop\", data: { artifactType: \"{{{ #regex ^(..) dropLocation }}}\", containerId:\"{{ #regex /([0-9]+)/ dropLocation }}\" } }"
          },
          {
            "target": "artifactItems",
            "dataSourceName": "ArtifactItems",
            "resultTemplate": "{ Value : \"{{{path}}}\", DisplayValue : \"{{{path}}}\", data: { itemType: \"{{{itemType}}}\", containerId:\"{{containerId}}\" } }"
          }
        ],
        "browsableArtifactTypeMapping": {
          "#/": "artifactItems"
        },
        "artifactTypeStreamMapping": {
          "#/": "zip",
          "\\":  "fileshare"
        }
      }
    }
  ]
}
